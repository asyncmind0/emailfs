/***************************************************************************
 *   Copyright (C) 2005 by Steven Joseph   *
 *   stevenjose@gmail.com   *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#define DEBG(str) printf("%s\n",str);
#include <string.h> /* use of strcpy() */
#include <stdio.h> /* use of printf() */
#include <stdlib.h> /* use of exit() */
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <netinet/in.h>
struct sockaddr_in myconnection;
struct hostent myserver;
int popsock;
char* srvdata=NULL;
char* pop_connect(char *server,char *username,char *password)
{
	char *ret;
	popsock=pop3_prepare(server,0,&myconnection,&myserver);
	if(-1==popsock) {
		printf("check your network...\n");
		exit(1);
	}
	
	srvdata=pop3_connect(popsock,&myconnection);
	free(srvdata);
	
	srvdata=pop3_user(popsock,username);
	free(srvdata);
	
	ret=srvdata=pop3_pass(popsock,password);
	free(srvdata);
	
			return ret;

}

int pop_stat(){
	
	srvdata=pop3_stat(popsock);
	int ret = stat2last(srvdata);
	//printf("stat: %d bytes\n",stat2bytes(srvdata));
	free(srvdata);
	return ret;
}

char *pop_disconnect()
{
	pop3_quit(popsock);
	return pop3_disconnect(popsock);

}


int get_next_dentery(char *buff){
	static int dent_num;
	if(stat2last(resp)<=dent_num){
		strcpy(buff,"\n");
		return -1;
	else{

	}

}
